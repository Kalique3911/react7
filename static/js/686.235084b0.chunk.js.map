{"version":3,"file":"static/js/686.235084b0.chunk.js","mappings":"4NAMA,MAyBA,GAAeA,EAAAA,EAAAA,IAAQC,EAAAA,KAAvB,EAzBaC,IACFC,EAAAA,EAAAA,MAAA,OAAKC,UAAW,OAAOC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAI,YAAcN,EAAMO,KAAKC,GAAGL,UACrCC,EAAAA,EAAAA,KAAA,OAAKK,IAAgC,MAA3BT,EAAMO,KAAKG,OAAOC,MAAgBX,EAAMO,KAAKG,OAAOC,MAAQC,EAAAA,EAAYC,IAAK,mBAG/FT,EAAAA,EAAAA,KAAA,QAAMF,UAAW,gBACjBE,EAAAA,EAAAA,KAAA,OAAAD,SAAMH,EAAMO,KAAKO,OAChBd,EAAMO,KAAKQ,SAAUX,EAAAA,EAAAA,KAAA,OAAKF,UAAW,UAAUC,SAAEH,EAAMO,KAAKQ,UAC7DX,EAAAA,EAAAA,KAAA,OAAAD,SACKH,EAAMO,KAAKS,UAAWZ,EAAAA,EAAAA,KAAA,UACfa,SAAUjB,EAAMkB,oBAAoBC,KAAKnB,EAAMoB,IAC/CC,QAASrB,EAAMsB,SACfpB,UAAW,WAAWC,SACzB,cAECC,EAAAA,EAAAA,KAAA,UACEa,SAAUjB,EAAMkB,oBAAoBC,KAAKnB,EAAMoB,IAC/CC,QAASrB,EAAMuB,OAAOpB,SACzB,kBCkDjB,GAAeL,EAAAA,EAAAA,IAAQ0B,EAAAA,EAAkBzB,EAAAA,KAAzC,EAjEc0B,KACV,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAaC,GCbNA,IACjBA,EAAMC,UAAUH,SDYiBI,CAAYF,KAC9CG,GAAcJ,EAAAA,EAAAA,KAAaC,GCVNA,IACpBA,EAAMC,UAAUE,YDSoBC,CAAeJ,KACpDZ,GAAsBW,EAAAA,EAAAA,KAAaC,GCPNA,IAC5BA,EAAMC,UAAUb,oBDM4BiB,CAAuBL,MACnEM,KAAMC,EAAS,QAAEC,EAAO,UAAEC,IAAaC,EAAAA,EAAAA,IAAiB,CAACP,cAAaL,cACtEL,IAAUkB,EAAAA,EAAAA,OACVnB,IAAYoB,EAAAA,EAAAA,MACnB,IAAKC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,IAC7CC,EAAQ,GACZ,GAAIT,EAAW,CACX,IAAIU,EAAkBV,EAAUW,WAC5BC,EAAaC,KAAKC,KAAKJ,EAAkBnB,GAC7C,IAAK,IAAIwB,EAAI,EAAGA,GAAKH,EAAYG,IAC7BN,EAAMO,KAAKD,EAEnB,CACA,IAAIE,EAAeR,EAAMS,KAAIC,IAAC,CAAMC,MAAM,GAADC,OAAKF,GAAKG,MAAM,GAADD,OAAKF,EAAC,aAa9D,OAAIjB,GACOnC,EAAAA,EAAAA,KAAAwD,EAAAA,SAAA,KAGJ3D,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACHC,EAAAA,EAAAA,KAACyD,EAAAA,GAAM,CAACC,QAASR,EAAcS,SAZbC,IAClBtC,GAASuC,EAAAA,EAAAA,IAAeD,EAAWP,OAAO,EAWavD,UAAW,yBAC1DgE,gBAAiB,gBAAiBC,YAAa,iBACvD/D,EAAAA,EAAAA,KAACyD,EAAAA,GAAM,CAACC,QAnBI,CAAC,CAACL,MAAO,WAAYE,MAAO,iBAAkB,CAC1DF,MAAO,MACPE,MAAO,iBACR,CAACF,MAAO,SAAUE,MAAO,qBAgBEI,SAXNK,IACpBxB,EAAiBwB,EAAO,EAU4BlE,UAAW,yBACvDgE,gBAAiB,gBAAiBC,YAAa,iBAAkBE,SAAS,IACjFhC,EAAUiC,MAAMf,KAAIhD,IACZA,EAAKS,UAAY2B,EAAcxB,MAAKoD,GAAiB,aAAZA,EAAEd,UAG3ClD,EAAKG,OAAOC,OAASgC,EAAcxB,MAAKoD,GAAiB,QAAZA,EAAEd,UAG/ClD,EAAKQ,QAAU4B,EAAcxB,MAAKoD,GAAiB,WAAZA,EAAEd,QALnC,MAQJrD,EAAAA,EAAAA,KAACoE,EAAI,CAAejE,KAAMA,EAAMW,oBAAqBA,EAAqBE,GAAIZ,GAAMA,IAAOD,EAAKC,GAC1Fc,SAAUmD,UACN/C,GAASgD,EAAAA,EAAAA,IAA6BnE,EAAKC,IAAI,UACzCc,EAASf,EAAKC,UACd8B,IACNZ,GAASgD,EAAAA,EAAAA,IAA6BnE,EAAKC,IAAI,GAAO,EACvDe,OAAQkD,UACpB/C,GAASgD,EAAAA,EAAAA,IAA6BnE,EAAKC,IAAI,UACzCe,EAAOhB,EAAKC,UACZ8B,IACNZ,GAASgD,EAAAA,EAAAA,IAA6BnE,EAAKC,IAAI,GAAO,GAVxCD,EAAKC,QAazB,G","sources":["components/Users/User.jsx","components/Users/Users.jsx","selectors/usersSelectors.js"],"sourcesContent":["import {NavLink} from 'react-router-dom'\r\nimport defaultAva from '../../images/defaultAva.svg'\r\nimport React from 'react'\r\nimport {compose} from 'redux'\r\nimport {memo} from 'react'\r\n\r\nconst User = props => {\r\n    return <div className={'user'}>\r\n        <div>\r\n            <NavLink to={'/profile/' + props.user.id}>\r\n                <img src={props.user.photos.small != null ? props.user.photos.small : defaultAva} alt={'small ava'}/>\r\n            </NavLink>\r\n        </div>\r\n        <span className={'uSeparator'}></span>\r\n        <div>{props.user.name}</div>\r\n        {props.user.status && <div className={'uStatus'}>{props.user.status}</div>}\r\n        <div>\r\n            {props.user.followed ? <button\r\n                    disabled={props.followingInProgress.some(props.fn)}\r\n                    onClick={props.unfollow}\r\n                    className={'followed'}\r\n                >Unfollow</button>\r\n\r\n                : <button\r\n                    disabled={props.followingInProgress.some(props.fn)}\r\n                    onClick={props.follow}\r\n                >Follow</button>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default compose(memo)(User)","import './Users.css'\r\nimport React, {memo, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getCurrentPage, getFollowingInProgress, getPageSize} from '../../selectors/usersSelectors'\r\nimport {setCurrentPage, setToggleIsFollowingProgress} from '../../redux/usersSlice'\r\nimport {withAuthNavigate} from '../../common/HOCs/withAuthNavigate'\r\nimport {compose} from 'redux'\r\nimport {useFollowMutation, useGetUsersQuery, useUnfollowMutation} from '../../API/usersAPI'\r\nimport Select from 'react-select'\r\nimport User from './User'\r\n\r\nconst Users = () => {\r\n    const dispatch = useDispatch()\r\n    const pageSize = useSelector((state) => getPageSize(state))\r\n    const currentPage = useSelector((state) => getCurrentPage(state))\r\n    const followingInProgress = useSelector((state) => getFollowingInProgress(state))\r\n    const {data: usersData, refetch, isLoading} = useGetUsersQuery({currentPage, pageSize})\r\n    const [follow] = useFollowMutation()\r\n    const [unfollow] = useUnfollowMutation()\r\n    let [searchOptions, setSearchOptions] = useState([])\r\n    let pages = []\r\n    if (usersData) {\r\n        let totalUsersCount = usersData.totalCount\r\n        let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n    }\r\n    let pagesOptions = pages.map(p => ({value: `${p}`, label: `${p} page`}))\r\n    const options = [{value: 'followed', label: 'only followed'}, {\r\n        value: 'ava',\r\n        label: 'only with ava'\r\n    }, {value: 'status', label: 'only with status'}]\r\n\r\n    const onPageChange = (pageNumber) => {\r\n        dispatch(setCurrentPage(pageNumber.value))\r\n    }\r\n    const onOptionChange = (option) => {\r\n        setSearchOptions(option)\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <></>\r\n    }\r\n\r\n    return <div>\r\n        <Select options={pagesOptions} onChange={onPageChange} className={'react-select-container'}\r\n                classNamePrefix={'custom-select'} placeholder={'Select page'}/>\r\n        <Select options={options} onChange={onOptionChange} className={'react-select-container'}\r\n                classNamePrefix={'custom-select'} placeholder={'Select options'} isMulti={true}/>\r\n        {usersData.items.map(user => {\r\n            if (!user.followed && searchOptions.some(o => o.value === 'followed')) {\r\n                return null\r\n            }\r\n            if (!user.photos.small && searchOptions.some(o => o.value === 'ava')) {\r\n                return null\r\n            }\r\n            if (!user.status && searchOptions.some(o => o.value === 'status')) {\r\n                return null\r\n            }\r\n            return <User key={user.id} user={user} followingInProgress={followingInProgress} fn={id => id === user.id}\r\n                         unfollow={async () => {\r\n                             dispatch(setToggleIsFollowingProgress(user.id, true))\r\n                             await unfollow(user.id)\r\n                             await refetch()\r\n                             dispatch(setToggleIsFollowingProgress(user.id, false))\r\n                         }} follow={async () => {\r\n                dispatch(setToggleIsFollowingProgress(user.id, true))\r\n                await follow(user.id)\r\n                await refetch()\r\n                dispatch(setToggleIsFollowingProgress(user.id, false))\r\n            }}/>\r\n        })}\r\n    </div>\r\n}\r\n\r\nexport default compose(withAuthNavigate, memo)(Users)\r\n","export const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n"],"names":["compose","memo","props","_jsxs","className","children","_jsx","NavLink","to","user","id","src","photos","small","defaultAva","alt","name","status","followed","disabled","followingInProgress","some","fn","onClick","unfollow","follow","withAuthNavigate","Users","dispatch","useDispatch","pageSize","useSelector","state","usersPage","getPageSize","currentPage","getCurrentPage","getFollowingInProgress","data","usersData","refetch","isLoading","useGetUsersQuery","useFollowMutation","useUnfollowMutation","searchOptions","setSearchOptions","useState","pages","totalUsersCount","totalCount","pagesCount","Math","ceil","i","push","pagesOptions","map","p","value","concat","label","_Fragment","Select","options","onChange","pageNumber","setCurrentPage","classNamePrefix","placeholder","option","isMulti","items","o","User","async","setToggleIsFollowingProgress"],"sourceRoot":""}